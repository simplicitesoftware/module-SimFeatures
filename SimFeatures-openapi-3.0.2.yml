#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: SimFeatures 0.1
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    ArrayOfFtM2m:
      type: array
      items:
        $ref: '#/components/schemas/FtM2m'
    FtM2mChild:
      type: object
      properties:
        row_id:
          description: Unique technical row ID
          type: string
        ftM2mcCode:
          description: Code
          type: string
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    FtM2m:
      type: object
      properties:
        ftM2mId__ftM2mCode:
          description: Ft M2mm 2mc M2m id Code
          type: string
        ftM2mId:
          description: Ft M2mm 2mc M2m id
          type: string
        ftM2mcId:
          description: Ft M2mm 2mc M2mc id
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        ftM2mcId__ftM2mcCode:
          description: Ft M2mm 2mc M2mc id Code
          type: string
    PlaceData:
      type: object
      properties:
        coord:
          description: Geographical coordinates
          type: string
        address:
          description: Address
          type: string
        row_id:
          description: Row ID
          type: string
        label1:
          description: 'Label #1'
          type: string
        label2:
          description: 'Label #2'
          type: string
        label3:
          description: 'Label #3'
          type: string
    ArrayOfFtM2mChild:
      type: array
      items:
        $ref: '#/components/schemas/FtM2mChild'
    FtO2mChild:
      type: object
      properties:
        ftO2mcO2mId:
          description: Father
          type: string
        ftO2mcCode:
          description: Code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        ftO2mcO2mId__ftO2mCode:
          description: Father Code
          type: string
    PlaceMapData:
      type: object
      properties:
        places:
          description: Places
          type: array
          items:
            $ref: '#/components/schemas/PlaceData'
        name:
          description: Name
          type: string
    ArrayOfFtReflexiveMany:
      type: array
      items:
        $ref: '#/components/schemas/FtReflexiveMany'
    ArrayOfFtActions:
      type: array
      items:
        $ref: '#/components/schemas/FtActions'
    FtRxmLink:
      type: object
      properties:
        ftRxlRxm1:
          description: Item 1
          type: string
        ftRxlRxm1__ftRxmCode:
          description: Item 1 Code
          type: string
        ftRxlRxm2:
          description: Item 2
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        ftRxlRxm2__ftRxmCode:
          description: Code
          type: string
    FtCustomUser:
      type: object
      properties:
        row_module_id__mdl_name:
          description: Module name
          type: string
        usr_image_id:
          description: Picture
          type: object
        usr_email:
          description: Email address
          type: string
        usr_active:
          description: Active
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
        row_module_id:
          description: Module
          type: string
        usr_login:
          description: Login
          type: string
        usr_home_id__viw_name:
          description: Home page Name
          type: string
        usr_last_name:
          description: Last name
          type: string
        usr_cell_num:
          description: Mobile/cellular phone number
          type: string
        usr_lang:
          description: Language
          type: string
          enum:
          - ENU
          - FRA
        row_id:
          description: Unique technical row ID
          type: string
        usr_home_id:
          description: Home page
          type: string
        usr_first_name:
          description: First name
          type: string
    FtAttributes:
      type: object
      properties:
        ftAttrDateTimeToMinute:
          description: Date Time (To Minute)
          type: string
          example: yyyy-MM-dd HH:mm:ss
        ftAttrTimeToMinute:
          description: Time (To Minute)
          type: string
          example: HH:mm:ss
        ftAttrValidatedText:
          description: Validated Text
          type: string
        ftAttrPassword:
          description: Password
          type: string
        ftAttrDateTimeToDay:
          description: Date Time (To Day)
          type: string
          example: yyyy-MM-dd HH:mm:ss
        ftAttrBooleanCombobox:
          description: Boolean Combobox
          type: boolean
        ftAttrDateTimeToHour:
          description: Date Time (To Hour)
          type: string
          example: yyyy-MM-dd HH:mm:ss
        ftAttrDecimal:
          description: Decimal
          type: number
        ftAttrDecimalPercentage:
          description: Decimal Percentage
          type: number
        ftAttrEnumMultiRadioHorizontal:
          description: Enum Multi Radio Horizontal
          type: array
          items:
            type: string
            enum:
            - A
            - B
            - C
        ftAttrDateToMonth:
          description: Date (To Month)
          type: string
          example: yyyy-MM-dd
        ftAttrIntegerEuro:
          description: Integer Euro
          type: integer
        ftAttrIntegerPercentage:
          description: Integer Percentage
          type: integer
        ftAttrDocumentName:
          description: Document (Name)
          type: object
        ftAttrLongTextGridSource:
          description: Long Text Grid Source
          type: string
        ftAttrIntegerStars:
          description: Integer Stars
          type: integer
        ftAttrInteger:
          description: Integer
          type: integer
        ftAttrDateToYear:
          description: Date (To Year)
          type: string
          example: yyyy-MM-dd
        ftAttrEnum:
          description: Enum
          type: string
          enum:
          - A
          - B
          - C
        ftAttrDecimalMonetary:
          description: Decimal Monetary
          type: number
        ftAttrBoolean:
          description: Boolean
          type: boolean
        ftAttrLongText:
          description: Long Text
          type: string
        ftAttrIntegerMonetary:
          description: Integer Monetary
          type: integer
        ftAttrDateTimeToMonth:
          description: Date Time (To Month)
          type: string
          example: yyyy-MM-dd HH:mm:ss
        ftAttrEnumMultiCheckboxHorizontal:
          description: Enum Multi Checkbox Horizontal
          type: array
          items:
            type: string
            enum:
            - A
            - B
            - C
        ftAttrEnumMultiCheckboxVertical:
          description: Enum Multi Checkbox Vertical
          type: string
          enum:
          - A
          - B
          - C
        ftAttrDecimalCalculator:
          description: Decimal Calculator
          type: number
        ftAttrEnumRadioVertical:
          description: Enum Radio Vertical
          type: string
          enum:
          - A
          - B
          - C
        ftAttrDate:
          description: Date
          type: string
          example: yyyy-MM-dd
        ftAttrEnumRadioHorizontal:
          description: Enum Radio Horizontal
          type: string
          enum:
          - A
          - B
          - C
        ftAttrHtml:
          description: Html
          type: string
        ftAttrEnumCheckboxHorizontal:
          description: Enum Checkbox Horizontal
          type: string
          enum:
          - A
          - B
          - C
        ftAttrPhoneNumber:
          description: Phone Number
          type: string
        ftAttrLongTextEditor:
          description: Long Text Editor
          type: string
        ftAttrShortText:
          description: Short Text
          type: string
        ftAttrEnumPillbox:
          description: Enum Pillbox
          type: string
          enum:
          - A
          - B
          - C
        ftAttrLongTextGrid:
          description: Long Text Grid
          type: string
        ftAttrLongTextMarkdown:
          description: Long Text Markdown
          type: string
        ftAttrDecimalProgressBar:
          description: Decimal Progress Bar
          type: number
        ftAttrColor:
          description: Color
          type: string
          example: '#RRGGBB'
        ftAttrDocumentMultiList:
          description: Document (Multi, List)
          type: object
        ftAttrNotepadUserActivities:
          description: Notepad (User Activities)
          type: string
        ftAttrDateTimeToYear:
          description: Date Time (To Year)
          type: string
          example: yyyy-MM-dd HH:mm:ss
        ftAttrEmail:
          description: Email
          type: string
        ftAttrBooleanCheckbox:
          description: Boolean Checkbox
          type: boolean
        ftAttrEnumCheckboxVertical:
          description: Enum Checkbox Vertical
          type: string
          enum:
          - A
          - B
          - C
        ftAttrUrl:
          description: Url
          type: string
        ftAttrDecimalEuro:
          description: Decimal Euro
          type: number
        ftAttrImage:
          description: Image
          type: object
        ftAttrEnumMultiRadioVertical:
          description: Enum Multi Radio Vertical
          type: string
          enum:
          - A
          - B
          - C
        ftAttrDocumentMultiBox:
          description: Document (Multi, Box)
          type: object
        ftAttrTime:
          description: Time
          type: string
          example: HH:mm:ss
        ftAttrExternalFile:
          description: External File
          type: string
        ftAttrEnumMultiPillbox:
          description: Enum Multi Pillbox
          type: array
          items:
            type: string
            enum:
            - A
            - B
            - C
        ftAttrDocument:
          description: Document
          type: object
        ftAttrTimeToHour:
          description: Time (To Hour)
          type: string
          example: HH:mm:ss
        ftAttrGeographicalCoordinates:
          description: Geographical Coordinates
          type: string
          example: latitude;longitude
        ftAttrCode:
          description: Code
          type: string
        ftAttrIntegerProgressBar:
          description: Integer Progress Bar
          type: integer
        ftAttrNotepad:
          description: Notepad
          type: string
        ftAttrDateTime:
          description: Date Time
          type: string
          example: yyyy-MM-dd HH:mm:ss
        ftAttrBooleanSlide:
          description: Boolean Slide
          type: boolean
        row_id:
          description: Unique technical row ID
          type: string
        ftAttrEnumMulti:
          description: Enum Multi
          type: array
          items:
            type: string
            enum:
            - A
            - B
            - C
        ftAttrIntegerSlider:
          description: Integer Slider
          type: integer
    FtActions:
      type: object
      properties:
        ftActImage:
          description: Ft act image
          type: object
        ftActCode:
          description: Code
          type: string
        ftActDate:
          description: Ft act date
          type: string
          example: yyyy-MM-dd
        ftActState:
          description: Ft act state
          type: string
          enum:
          - A
          - B
        ftActDocument:
          description: Ft act document
          type: object
        row_id:
          description: Unique technical row ID
          type: string
    ArrayOfFtTgoTag:
      type: array
      items:
        $ref: '#/components/schemas/FtTgoTag'
    ArrayOfFtListItem:
      type: array
      items:
        $ref: '#/components/schemas/FtListItem'
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    FtTag:
      type: object
      properties:
        ftTagName:
          description: Name
          type: string
        row_id:
          description: Unique technical row ID
          type: string
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
    ArrayOfFtRxmLink:
      type: array
      items:
        $ref: '#/components/schemas/FtRxmLink'
    ArrayOfFtCustomUser:
      type: array
      items:
        $ref: '#/components/schemas/FtCustomUser'
    ArrayOfFtAttributes:
      type: array
      items:
        $ref: '#/components/schemas/FtAttributes'
    FtReflexiveMany:
      type: object
      properties:
        ftRxmCode:
          description: Code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        ftRxmId:
          description: Reflexive item (many)
          type: string
    FtTaggedObject:
      type: object
      properties:
        row_id:
          description: Unique technical row ID
          type: string
        ftTgoCode:
          description: Code
          type: string
    FtNotification:
      type: object
      properties:
        row_id:
          description: Unique technical row ID
          type: string
        ftNtfCode:
          description: Code
          type: string
    ArrayOfFtO2mChild:
      type: array
      items:
        $ref: '#/components/schemas/FtO2mChild'
    ArrayOfFtTag:
      type: array
      items:
        $ref: '#/components/schemas/FtTag'
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    FtSelectObject:
      type: object
      properties:
        ftSlcField1:
          description: Field 1
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        ftSlcField2:
          description: Field 2
          type: string
    ArrayOfFtTaggedObject:
      type: array
      items:
        $ref: '#/components/schemas/FtTaggedObject'
    FtTgoTag:
      type: object
      properties:
        ftTgotagTagId__ftTagName:
          description: Ft tgotag tag id Name
          type: string
        ftTgotagTgoId:
          description: Ft tgotag tgo id
          type: string
        ftTgotagTagId:
          description: Ft tgotag tag id
          type: string
        ftTgotagTgoId__ftTgoCode:
          description: Ft tgotag tgo id Code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
    ArrayOfFtNotification:
      type: array
      items:
        $ref: '#/components/schemas/FtNotification'
    FtRelationshipM2m:
      type: object
      properties:
        ftM2mCode:
          description: Code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
    ArrayOfFtRelationshipM2m:
      type: array
      items:
        $ref: '#/components/schemas/FtRelationshipM2m'
    FtRelationshipO2m:
      type: object
      properties:
        ftO2mCode:
          description: Code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
    ArrayOfFtRelationshipO2m:
      type: array
      items:
        $ref: '#/components/schemas/FtRelationshipO2m'
    FtListItem:
      type: object
      properties:
        ftLstDescription:
          description: Description
          type: string
        ftLstType:
          description: Type
          type: string
          enum:
          - A
          - B
          - C
        ftLstImage:
          description: Image
          type: object
        ftLstCode:
          description: Code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
    ArrayOfFtSelectObject:
      type: array
      items:
        $ref: '#/components/schemas/FtSelectObject'
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
servers:
- url: /api
openapi: 3.0.2
paths:
  /rest/FtRelationshipO2m/{row_id}:
    post:
      summary: Create a new FtRelationshipO2m business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtRelationshipO2m'
      operationId: obj-ftrelationshipo2m-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtRelationshipO2m'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtRelationshipO2m
    get:
      summary: Get a FtRelationshipO2m business object record
      security:
      - bearerAuth: []
      operationId: obj-ftrelationshipo2m-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtRelationshipO2m'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtRelationshipO2m
    delete:
      summary: Delete a FtRelationshipO2m business object record
      security:
      - bearerAuth: []
      operationId: obj-ftrelationshipo2m-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtRelationshipO2m
    put:
      summary: Update a FtRelationshipO2m business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtRelationshipO2m'
      operationId: obj-ftrelationshipo2m-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtRelationshipO2m'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtRelationshipO2m
  /rest/FtM2m/{row_id}:
    post:
      summary: Create a new FtM2m business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtM2m'
      operationId: obj-ftm2m-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtM2m'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtM2m
    get:
      summary: Get a FtM2m business object record
      security:
      - bearerAuth: []
      operationId: obj-ftm2m-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtM2m'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtM2m
    delete:
      summary: Delete a FtM2m business object record
      security:
      - bearerAuth: []
      operationId: obj-ftm2m-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtM2m
    put:
      summary: Update a FtM2m business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtM2m'
      operationId: obj-ftm2m-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtM2m'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtM2m
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /rest/FtCustomUser/{row_id}:
    post:
      summary: Create a new FtCustomUser business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtCustomUser'
      operationId: obj-ftcustomuser-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtCustomUser'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtCustomUser
    get:
      summary: Get a FtCustomUser business object record
      security:
      - bearerAuth: []
      operationId: obj-ftcustomuser-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtCustomUser'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtCustomUser
    delete:
      summary: Delete a FtCustomUser business object record
      security:
      - bearerAuth: []
      operationId: obj-ftcustomuser-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtCustomUser
    put:
      summary: Update a FtCustomUser business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtCustomUser'
      operationId: obj-ftcustomuser-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtCustomUser'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtCustomUser
  /rest/FtActions/{row_id}/action:ActAskFields:
    get:
      summary: Call a custom action for a FtActions business object record or for
        all records
      security:
      - bearerAuth: []
      operationId: obj-ftactions-action-actaskfields
      responses:
        '200':
          description: Success in calling the custom action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResult'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtActions
  /rest/FtSelectObject:
    get:
      summary: Search FtSelectObject business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-ftselectobject-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtSelectObject'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftSlcField1
        description: Search filter for Field 1
        required: false
      - schema:
          type: string
        in: query
        name: ftSlcField2
        description: Search filter for Field 2
        required: false
      tags:
      - FtSelectObject
  /rest/FtActions/{row_id}:
    post:
      summary: Create a new FtActions business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtActions'
      operationId: obj-ftactions-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtActions'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtActions
    get:
      summary: Get a FtActions business object record
      security:
      - bearerAuth: []
      operationId: obj-ftactions-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtActions'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtActions
    delete:
      summary: Delete a FtActions business object record
      security:
      - bearerAuth: []
      operationId: obj-ftactions-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtActions
    put:
      summary: Update a FtActions business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtActions'
      operationId: obj-ftactions-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtActions'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtActions
  /rest/FtTgoTag/{row_id}:
    post:
      summary: Create a new FtTgoTag business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtTgoTag'
      operationId: obj-fttgotag-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtTgoTag'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtTgoTag
    get:
      summary: Get a FtTgoTag business object record
      security:
      - bearerAuth: []
      operationId: obj-fttgotag-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtTgoTag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtTgoTag
    delete:
      summary: Delete a FtTgoTag business object record
      security:
      - bearerAuth: []
      operationId: obj-fttgotag-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtTgoTag
    put:
      summary: Update a FtTgoTag business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtTgoTag'
      operationId: obj-fttgotag-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtTgoTag'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtTgoTag
  /rest/FtNotification/{row_id}:
    post:
      summary: Create a new FtNotification business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtNotification'
      operationId: obj-ftnotification-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtNotification'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtNotification
    get:
      summary: Get a FtNotification business object record
      security:
      - bearerAuth: []
      operationId: obj-ftnotification-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtNotification'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtNotification
    delete:
      summary: Delete a FtNotification business object record
      security:
      - bearerAuth: []
      operationId: obj-ftnotification-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtNotification
    put:
      summary: Update a FtNotification business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtNotification'
      operationId: obj-ftnotification-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtNotification'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtNotification
  /rest/FtReflexiveMany:
    get:
      summary: Search FtReflexiveMany business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-ftreflexivemany-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtReflexiveMany'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftRxmCode
        description: Search filter for Code
        required: false
      - schema:
          type: string
        in: query
        name: ftRxmId
        description: Search filter for Reflexive item (many)
        required: false
      tags:
      - FtReflexiveMany
  /rest/FtActions/{row_id}/action:ActConfirmFields:
    get:
      summary: Call a custom action for a FtActions business object record or for
        all records
      security:
      - bearerAuth: []
      operationId: obj-ftactions-action-actconfirmfields
      responses:
        '200':
          description: Success in calling the custom action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResult'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtActions
  /rest/FtM2mChild:
    get:
      summary: Search FtM2mChild business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-ftm2mchild-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtM2mChild'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftM2mcCode
        description: Search filter for Code
        required: false
      tags:
      - FtM2mChild
  /rest/FtRelationshipO2m:
    get:
      summary: Search FtRelationshipO2m business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-ftrelationshipo2m-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtRelationshipO2m'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftO2mCode
        description: Search filter for Code
        required: false
      tags:
      - FtRelationshipO2m
  /rest/FtRxmLink/{row_id}:
    post:
      summary: Create a new FtRxmLink business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtRxmLink'
      operationId: obj-ftrxmlink-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtRxmLink'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtRxmLink
    get:
      summary: Get a FtRxmLink business object record
      security:
      - bearerAuth: []
      operationId: obj-ftrxmlink-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtRxmLink'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtRxmLink
    delete:
      summary: Delete a FtRxmLink business object record
      security:
      - bearerAuth: []
      operationId: obj-ftrxmlink-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtRxmLink
    put:
      summary: Update a FtRxmLink business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtRxmLink'
      operationId: obj-ftrxmlink-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtRxmLink'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtRxmLink
  /rest/FtNotification:
    get:
      summary: Search FtNotification business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-ftnotification-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtNotification'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftNtfCode
        description: Search filter for Code
        required: false
      tags:
      - FtNotification
  /rest/FtListItem:
    get:
      summary: Search FtListItem business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-ftlistitem-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtListItem'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftLstCode
        description: Search filter for Code
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftLstType
        description: Search filter for Type
        required: false
      - schema:
          type: string
        in: query
        name: ftLstDescription
        description: Search filter for Description
        required: false
      - schema:
          type: string
        in: query
        name: ftLstImage
        description: Search filter for Image
        required: false
      tags:
      - FtListItem
  /rest/FtRelationshipM2m:
    get:
      summary: Search FtRelationshipM2m business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-ftrelationshipm2m-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtRelationshipM2m'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftM2mCode
        description: Search filter for Code
        required: false
      tags:
      - FtRelationshipM2m
  /rest/FtM2m:
    get:
      summary: Search FtM2m business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-ftm2m-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtM2m'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftM2mId
        description: Search filter for Ft M2mm 2mc M2m id
        required: false
      - schema:
          type: string
        in: query
        name: ftM2mId__ftM2mCode
        description: Search filter for Ft M2mm 2mc M2m id Code
        required: false
      - schema:
          type: string
        in: query
        name: ftM2mcId
        description: Search filter for Ft M2mm 2mc M2mc id
        required: false
      - schema:
          type: string
        in: query
        name: ftM2mcId__ftM2mcCode
        description: Search filter for Ft M2mm 2mc M2mc id Code
        required: false
      tags:
      - FtM2m
  /rest/FtActions/{row_id}/action:ActAsync:
    get:
      summary: Call a custom action for a FtActions business object record or for
        all records
      security:
      - bearerAuth: []
      operationId: obj-ftactions-action-actasync
      responses:
        '200':
          description: Success in calling the custom action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResult'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtActions
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/FtListItem/{row_id}:
    post:
      summary: Create a new FtListItem business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtListItem'
      operationId: obj-ftlistitem-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtListItem'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtListItem
    get:
      summary: Get a FtListItem business object record
      security:
      - bearerAuth: []
      operationId: obj-ftlistitem-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtListItem'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtListItem
    delete:
      summary: Delete a FtListItem business object record
      security:
      - bearerAuth: []
      operationId: obj-ftlistitem-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtListItem
    put:
      summary: Update a FtListItem business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtListItem'
      operationId: obj-ftlistitem-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtListItem'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtListItem
  /rest/FtTaggedObject/{row_id}:
    post:
      summary: Create a new FtTaggedObject business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtTaggedObject'
      operationId: obj-fttaggedobject-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtTaggedObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtTaggedObject
    get:
      summary: Get a FtTaggedObject business object record
      security:
      - bearerAuth: []
      operationId: obj-fttaggedobject-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtTaggedObject'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtTaggedObject
    delete:
      summary: Delete a FtTaggedObject business object record
      security:
      - bearerAuth: []
      operationId: obj-fttaggedobject-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtTaggedObject
    put:
      summary: Update a FtTaggedObject business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtTaggedObject'
      operationId: obj-fttaggedobject-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtTaggedObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtTaggedObject
  /rest/FtM2mChild/{row_id}:
    post:
      summary: Create a new FtM2mChild business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtM2mChild'
      operationId: obj-ftm2mchild-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtM2mChild'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtM2mChild
    get:
      summary: Get a FtM2mChild business object record
      security:
      - bearerAuth: []
      operationId: obj-ftm2mchild-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtM2mChild'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtM2mChild
    delete:
      summary: Delete a FtM2mChild business object record
      security:
      - bearerAuth: []
      operationId: obj-ftm2mchild-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtM2mChild
    put:
      summary: Update a FtM2mChild business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtM2mChild'
      operationId: obj-ftm2mchild-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtM2mChild'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtM2mChild
  /rest/FtRxmLink:
    get:
      summary: Search FtRxmLink business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-ftrxmlink-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtRxmLink'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftRxlRxm1
        description: Search filter for Item 1
        required: false
      - schema:
          type: string
        in: query
        name: ftRxlRxm1__ftRxmCode
        description: Search filter for Item 1 Code
        required: false
      - schema:
          type: string
        in: query
        name: ftRxlRxm2
        description: Search filter for Item 2
        required: false
      - schema:
          type: string
        in: query
        name: ftRxlRxm2__ftRxmCode
        description: Search filter for Code
        required: false
      tags:
      - FtRxmLink
  /rest/FtRelationshipM2m/{row_id}:
    post:
      summary: Create a new FtRelationshipM2m business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtRelationshipM2m'
      operationId: obj-ftrelationshipm2m-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtRelationshipM2m'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtRelationshipM2m
    get:
      summary: Get a FtRelationshipM2m business object record
      security:
      - bearerAuth: []
      operationId: obj-ftrelationshipm2m-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtRelationshipM2m'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtRelationshipM2m
    delete:
      summary: Delete a FtRelationshipM2m business object record
      security:
      - bearerAuth: []
      operationId: obj-ftrelationshipm2m-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtRelationshipM2m
    put:
      summary: Update a FtRelationshipM2m business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtRelationshipM2m'
      operationId: obj-ftrelationshipm2m-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtRelationshipM2m'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtRelationshipM2m
  /rest/FtAttributes/{row_id}:
    post:
      summary: Create a new FtAttributes business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtAttributes'
      operationId: obj-ftattributes-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtAttributes'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtAttributes
    get:
      summary: Get a FtAttributes business object record
      security:
      - bearerAuth: []
      operationId: obj-ftattributes-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtAttributes'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtAttributes
    delete:
      summary: Delete a FtAttributes business object record
      security:
      - bearerAuth: []
      operationId: obj-ftattributes-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtAttributes
    put:
      summary: Update a FtAttributes business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtAttributes'
      operationId: obj-ftattributes-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtAttributes'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtAttributes
  /rest/FtCustomUser:
    get:
      summary: Search FtCustomUser business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-ftcustomuser-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtCustomUser'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: usr_image_id
        description: Search filter for Picture
        required: false
      - schema:
          type: string
        in: query
        name: usr_login
        description: Search filter for Login
        required: false
      - schema:
          type: string
        in: query
        name: usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
          enum:
          - ENU
          - FRA
        in: query
        name: usr_lang
        description: Search filter for Language
        required: false
      - schema:
          type: string
        in: query
        name: usr_email
        description: Search filter for Email address
        required: false
      - schema:
          type: string
        in: query
        name: usr_cell_num
        description: Search filter for Mobile/cellular phone number
        required: false
      - schema:
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
        in: query
        name: usr_active
        description: Search filter for Active
        required: false
      - schema:
          type: string
        in: query
        name: usr_home_id
        description: Search filter for Home page
        required: false
      - schema:
          type: string
        in: query
        name: usr_home_id__viw_name
        description: Search filter for Home page Name
        required: false
      - schema:
          type: string
        in: query
        name: row_module_id
        description: Search filter for Module
        required: false
      - schema:
          type: string
        in: query
        name: row_module_id__mdl_name
        description: Search filter for Module name
        required: false
      tags:
      - FtCustomUser
  /rest/FtO2mChild:
    get:
      summary: Search FtO2mChild business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-fto2mchild-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtO2mChild'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftO2mcCode
        description: Search filter for Code
        required: false
      - schema:
          type: string
        in: query
        name: ftO2mcO2mId
        description: Search filter for Father
        required: false
      - schema:
          type: string
        in: query
        name: ftO2mcO2mId__ftO2mCode
        description: Search filter for Father Code
        required: false
      tags:
      - FtO2mChild
  /rest/FtSelectObject/{row_id}:
    post:
      summary: Create a new FtSelectObject business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtSelectObject'
      operationId: obj-ftselectobject-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtSelectObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtSelectObject
    get:
      summary: Get a FtSelectObject business object record
      security:
      - bearerAuth: []
      operationId: obj-ftselectobject-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtSelectObject'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtSelectObject
    delete:
      summary: Delete a FtSelectObject business object record
      security:
      - bearerAuth: []
      operationId: obj-ftselectobject-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtSelectObject
    put:
      summary: Update a FtSelectObject business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtSelectObject'
      operationId: obj-ftselectobject-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtSelectObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtSelectObject
  /rest/FtTgoTag:
    get:
      summary: Search FtTgoTag business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-fttgotag-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtTgoTag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftTgotagTgoId
        description: Search filter for Ft tgotag tgo id
        required: false
      - schema:
          type: string
        in: query
        name: ftTgotagTgoId__ftTgoCode
        description: Search filter for Ft tgotag tgo id Code
        required: false
      - schema:
          type: string
        in: query
        name: ftTgotagTagId
        description: Search filter for Ft tgotag tag id
        required: false
      - schema:
          type: string
        in: query
        name: ftTgotagTagId__ftTagName
        description: Search filter for Ft tgotag tag id Name
        required: false
      tags:
      - FtTgoTag
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
  /rest/FtTag:
    get:
      summary: Search FtTag business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-fttag-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtTag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftTagName
        description: Search filter for Name
        required: false
      tags:
      - FtTag
  /rest/FtTaggedObject:
    get:
      summary: Search FtTaggedObject business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-fttaggedobject-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtTaggedObject'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftTgoCode
        description: Search filter for Code
        required: false
      tags:
      - FtTaggedObject
  /rest/FtTag/{row_id}:
    post:
      summary: Create a new FtTag business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtTag'
      operationId: obj-fttag-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtTag'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtTag
    get:
      summary: Get a FtTag business object record
      security:
      - bearerAuth: []
      operationId: obj-fttag-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtTag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtTag
    delete:
      summary: Delete a FtTag business object record
      security:
      - bearerAuth: []
      operationId: obj-fttag-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtTag
    put:
      summary: Update a FtTag business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtTag'
      operationId: obj-fttag-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtTag'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtTag
  /rest/FtReflexiveMany/{row_id}:
    post:
      summary: Create a new FtReflexiveMany business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtReflexiveMany'
      operationId: obj-ftreflexivemany-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtReflexiveMany'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtReflexiveMany
    get:
      summary: Get a FtReflexiveMany business object record
      security:
      - bearerAuth: []
      operationId: obj-ftreflexivemany-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtReflexiveMany'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtReflexiveMany
    delete:
      summary: Delete a FtReflexiveMany business object record
      security:
      - bearerAuth: []
      operationId: obj-ftreflexivemany-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtReflexiveMany
    put:
      summary: Update a FtReflexiveMany business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtReflexiveMany'
      operationId: obj-ftreflexivemany-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtReflexiveMany'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtReflexiveMany
  /rest/FtAttributes:
    get:
      summary: Search FtAttributes business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-ftattributes-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtAttributes'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrCode
        description: Search filter for Code
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrShortText
        description: Search filter for Short Text
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrValidatedText
        description: Search filter for Validated Text
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrLongText
        description: Search filter for Long Text
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrLongTextEditor
        description: Search filter for Long Text Editor
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrLongTextMarkdown
        description: Search filter for Long Text Markdown
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrLongTextGrid
        description: Search filter for Long Text Grid
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrLongTextGridSource
        description: Search filter for Long Text Grid Source
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrHtml
        description: Search filter for Html
        required: false
      - schema:
          type: integer
        in: query
        name: ftAttrInteger
        description: Search filter for Integer
        required: false
      - schema:
          type: integer
        in: query
        name: ftAttrIntegerMonetary
        description: Search filter for Integer Monetary
        required: false
      - schema:
          type: integer
        in: query
        name: ftAttrIntegerPercentage
        description: Search filter for Integer Percentage
        required: false
      - schema:
          type: integer
        in: query
        name: ftAttrIntegerEuro
        description: Search filter for Integer Euro
        required: false
      - schema:
          type: integer
        in: query
        name: ftAttrIntegerProgressBar
        description: Search filter for Integer Progress Bar
        required: false
      - schema:
          type: integer
        in: query
        name: ftAttrIntegerStars
        description: Search filter for Integer Stars
        required: false
      - schema:
          type: integer
        in: query
        name: ftAttrIntegerSlider
        description: Search filter for Integer Slider
        required: false
      - schema:
          type: number
        in: query
        name: ftAttrDecimal
        description: Search filter for Decimal
        required: false
      - schema:
          type: number
        in: query
        name: ftAttrDecimalMonetary
        description: Search filter for Decimal Monetary
        required: false
      - schema:
          type: number
        in: query
        name: ftAttrDecimalPercentage
        description: Search filter for Decimal Percentage
        required: false
      - schema:
          type: number
        in: query
        name: ftAttrDecimalEuro
        description: Search filter for Decimal Euro
        required: false
      - schema:
          type: number
        in: query
        name: ftAttrDecimalProgressBar
        description: Search filter for Decimal Progress Bar
        required: false
      - schema:
          type: number
        in: query
        name: ftAttrDecimalCalculator
        description: Search filter for Decimal Calculator
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDate
        description: Search filter for Date
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDateToMonth
        description: Search filter for Date (To Month)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDateToYear
        description: Search filter for Date (To Year)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrTime
        description: Search filter for Time
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrTimeToMinute
        description: Search filter for Time (To Minute)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrTimeToHour
        description: Search filter for Time (To Hour)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDateTime
        description: Search filter for Date Time
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDateTimeToMinute
        description: Search filter for Date Time (To Minute)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDateTimeToHour
        description: Search filter for Date Time (To Hour)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDateTimeToDay
        description: Search filter for Date Time (To Day)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDateTimeToMonth
        description: Search filter for Date Time (To Month)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDateTimeToYear
        description: Search filter for Date Time (To Year)
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnum
        description: Search filter for Enum
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumRadioHorizontal
        description: Search filter for Enum Radio Horizontal
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumCheckboxHorizontal
        description: Search filter for Enum Checkbox Horizontal
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumCheckboxVertical
        description: Search filter for Enum Checkbox Vertical
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumRadioVertical
        description: Search filter for Enum Radio Vertical
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumPillbox
        description: Search filter for Enum Pillbox
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumMulti
        description: Search filter for Enum Multi
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumMultiCheckboxHorizontal
        description: Search filter for Enum Multi Checkbox Horizontal
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumMultiCheckboxVertical
        description: Search filter for Enum Multi Checkbox Vertical
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumMultiRadioHorizontal
        description: Search filter for Enum Multi Radio Horizontal
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumMultiRadioVertical
        description: Search filter for Enum Multi Radio Vertical
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumMultiPillbox
        description: Search filter for Enum Multi Pillbox
        required: false
      - schema:
          type: boolean
        in: query
        name: ftAttrBoolean
        description: Search filter for Boolean
        required: false
      - schema:
          type: boolean
        in: query
        name: ftAttrBooleanCheckbox
        description: Search filter for Boolean Checkbox
        required: false
      - schema:
          type: boolean
        in: query
        name: ftAttrBooleanCombobox
        description: Search filter for Boolean Combobox
        required: false
      - schema:
          type: boolean
        in: query
        name: ftAttrBooleanSlide
        description: Search filter for Boolean Slide
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDocument
        description: Search filter for Document
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDocumentName
        description: Search filter for Document (Name)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDocumentMultiBox
        description: Search filter for Document (Multi, Box)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDocumentMultiList
        description: Search filter for Document (Multi, List)
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrExternalFile
        description: Search filter for External File
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrImage
        description: Search filter for Image
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrUrl
        description: Search filter for Url
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrEmail
        description: Search filter for Email
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrPassword
        description: Search filter for Password
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrPhoneNumber
        description: Search filter for Phone Number
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrColor
        description: Search filter for Color
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrGeographicalCoordinates
        description: Search filter for Geographical Coordinates
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrNotepad
        description: Search filter for Notepad
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrNotepadUserActivities
        description: Search filter for Notepad (User Activities)
        required: false
      tags:
      - FtAttributes
  /rest/FtActions:
    get:
      summary: Search FtActions business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-ftactions-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtActions'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftActCode
        description: Search filter for Code
        required: false
      - schema:
          type: string
        in: query
        name: ftActDate
        description: Search filter for Ft act date
        required: false
      - schema:
          type: string
        in: query
        name: ftActDocument
        description: Search filter for Ft act document
        required: false
      - schema:
          type: string
        in: query
        name: ftActImage
        description: Search filter for Ft act image
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
        in: query
        name: ftActState
        description: Search filter for Ft act state
        required: false
      tags:
      - FtActions
  /rest/FtO2mChild/{row_id}:
    post:
      summary: Create a new FtO2mChild business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtO2mChild'
      operationId: obj-fto2mchild-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtO2mChild'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtO2mChild
    get:
      summary: Get a FtO2mChild business object record
      security:
      - bearerAuth: []
      operationId: obj-fto2mchild-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtO2mChild'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtO2mChild
    delete:
      summary: Delete a FtO2mChild business object record
      security:
      - bearerAuth: []
      operationId: obj-fto2mchild-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtO2mChild
    put:
      summary: Update a FtO2mChild business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtO2mChild'
      operationId: obj-fto2mchild-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtO2mChild'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtO2mChild
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module SimFeatures
  title: SimFeatures
  version: '0.1'
tags:
- name: FtActions
  description: Action
- name: FtAttributes
  description: Attributes
- name: FtCustomUser
  description: Custom User
- name: FtListItem
  description: Lists
- name: FtM2m
  description: N/N
- name: FtM2mChild
  description: Child (many to many)
- name: FtNotification
  description: Notification Tester
- name: FtO2mChild
  description: FtO2mChild
- name: FtReflexiveMany
  description: Reflexive item (many)
- name: FtRelationshipM2m
  description: Relationship (many to many)
- name: FtRelationshipO2m
  description: Relationship (one to many)
- name: FtRxmLink
  description: Associated items
- name: FtSelectObject
  description: Select object
- name: FtTag
  description: Tag
- name: FtTaggedObject
  description: Tagged object
- name: FtTgoTag
  description: FtTgoTag
