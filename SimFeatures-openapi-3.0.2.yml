#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: SimFeatures 1
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    FtAttributes:
      type: object
      properties:
        ftAttrBoolean:
          description: Boolean
          type: boolean
        ftAttrPassword:
          description: Password
          type: string
        ftAttrLongText:
          description: Long Text
          type: string
        ftAttrDecimal:
          description: Decimal
          type: number
        ftAttrTime:
          description: Time
          type: string
          example: HH:mm:ss
        ftAttrExternalFile:
          description: External File
          type: string
        ftAttrColor:
          description: Color
          type: string
          example: '#RRGGBB'
        ftAttrDocument:
          description: Document
          type: object
        ftAttrGeographicalCoordinates:
          description: Geographical Coordinates
          type: string
          example: latitude;longitude
        ftAttrDate:
          description: Date
          type: string
          example: yyyy-MM-dd
        ftAttrEmail:
          description: Email
          type: string
        ftAttrNotepad:
          description: Notepad
          type: string
        ftAttrDateTime:
          description: Date Time
          type: string
          example: yyyy-MM-dd HH:mm:ss
        ftAttrHtml:
          description: Html
          type: string
        ftAttrUrl:
          description: Url
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        ftAttrEnumMulti:
          description: Enum Multi
          type: array
          items:
            type: string
            enum:
            - A
            - B
            - C
        ftAttrInteger:
          description: Integer
          type: integer
        ftAttrPhoneNumber:
          description: Phone Number
          type: string
        ftAttrEnum:
          description: Enum
          type: string
          enum:
          - A
          - B
          - C
        ftAttrImage:
          description: Image
          type: object
        ftAttrShortText:
          description: Short Text
          type: string
    ArrayOfFtAttributes:
      type: array
      items:
        $ref: '#/components/schemas/FtAttributes'
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
openapi: 3.0.2
paths:
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/FtAttributes:
    get:
      summary: Search FtAttributes business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-ftattributes-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFtAttributes'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrShortText
        description: Search filter for Short Text
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrLongText
        description: Search filter for Long Text
        required: false
      - schema:
          type: integer
        in: query
        name: ftAttrInteger
        description: Search filter for Integer
        required: false
      - schema:
          type: number
        in: query
        name: ftAttrDecimal
        description: Search filter for Decimal
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDate
        description: Search filter for Date
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDateTime
        description: Search filter for Date Time
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrTime
        description: Search filter for Time
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnum
        description: Search filter for Enum
        required: false
      - schema:
          type: string
          enum:
          - A
          - B
          - C
        in: query
        name: ftAttrEnumMulti
        description: Search filter for Enum Multi
        required: false
      - schema:
          type: boolean
        in: query
        name: ftAttrBoolean
        description: Search filter for Boolean
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrUrl
        description: Search filter for Url
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrHtml
        description: Search filter for Html
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrEmail
        description: Search filter for Email
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrDocument
        description: Search filter for Document
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrPassword
        description: Search filter for Password
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrExternalFile
        description: Search filter for External File
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrImage
        description: Search filter for Image
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrNotepad
        description: Search filter for Notepad
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrPhoneNumber
        description: Search filter for Phone Number
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrColor
        description: Search filter for Color
        required: false
      - schema:
          type: string
        in: query
        name: ftAttrGeographicalCoordinates
        description: Search filter for Geographical Coordinates
        required: false
      tags:
      - FtAttributes
  /rest/FtAttributes/{row_id}:
    post:
      summary: Create a new FtAttributesbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtAttributes'
      operationId: obj-ftattributes-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtAttributes'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtAttributes
    get:
      summary: Get a FtAttributes business object record
      security:
      - bearerAuth: []
      operationId: obj-ftattributes-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtAttributes'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - FtAttributes
    delete:
      summary: Delete a FtAttributes business object record
      security:
      - bearerAuth: []
      operationId: obj-ftattributes-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtAttributes
    put:
      summary: Update a FtAttributesbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtAttributes'
      operationId: obj-ftattributes-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtAttributes'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - FtAttributes
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module SimFeatures
  title: SimFeatures
  version: '1'
tags:
- name: FtAttributes
  description: Attributes
